from state_machine.state import State, StateBundle
from state_machine.state_tree import StateTree
from aiogram.types import Message
from keyboards.inline import *

class RegisteredMainMenu(State):
    def __init__(self, tree: StateTree) -> None:
        super().__init__('registered_main_menu', tree)

    async def enable(self, bundle: StateBundle = None) -> None:
        await self.tree.user.bot.send_message(
            chat_id=self.tree.user.id,
            text='–†–µ–≥–∏—Å—Ç–∞—Ä—Ü–∏—è –ø—Ä–æ–π–¥–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!',
        )
        await self.send_menu()

    async def disable(self) -> None:
        pass

    async def process_message(self, message: Message) -> None:
        text = message.text
        if text == '–ë–∞–ª–∞–Ω—Å':
            await self.tree.user.bot.send_message(
                chat_id=self.tree.user.id,
                text=f'–í–∞—à –±–∞–ª–∞–Ω—Å: üí∞<b>{self.tree.user.data.money}</b>. –û–≥–æ!\n –î–ª—è –µ–≥–æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–æ–π–¥–∏—Ç–µ –Ω–∞ –∫–∞—Å—Å—É.',
                parse_mode='HTML'
            )
            await self.send_menu()

        elif text == '–ö–æ–¥':
            await self.tree.user.bot.send_message(
                chat_id=self.tree.user.id,
                text=f'–í–∞—à –∫–æ–¥: üîë<b>{self.tree.user.data.code}</b>',
                parse_mode='HTML'
            )
            await self.send_menu()
        else:
            await self.tree.user.bot.send_message(
                chat_id=self.tree.user.id,
                text=f'–ù–µ–∏—Å–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞',
                reply_markup=registered_main_menu
            )

    async def send_menu(self):
        await self.tree.user.bot.send_message(
            chat_id=self.tree.user.id,
            text='–î–ª—è –¥–∞–ª—å–Ω–µ–π—à–∏—Ö –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–π –∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫–∏.',
            reply_markup=registered_main_menu
        )